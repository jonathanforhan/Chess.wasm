{"ast":null,"code":"var _jsxFileName = \"/home/jon/dev/shallow_blue/test/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\n//import { Chess } from './logic/Chess'\nimport { Chess } from 'chess.js';\nimport useWindowDimensions from './util/useWindowDimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const _window = useWindowDimensions();\n  const [game, setGame] = useState(new Chess());\n  const [currentTimeout, setCurrentTimeout] = useState();\n  const chessboardRef = useRef(null);\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = {\n        ...g\n      };\n      modify(update);\n      return update;\n    });\n  }\n  function makeRandomMove() {\n    const possibleMoves = game.moves();\n\n    // exit if the game is over\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return;\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    safeGameMutate(game => {\n      game.move(possibleMoves[randomIndex]);\n    });\n  }\n  function onDrop(sourceSquare, targetSquare) {\n    const gameCopy = new Object(...game);\n    console.log(gameCopy);\n    const move = gameCopy.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // always promote to a queen for example simplicity\n    });\n\n    setGame(gameCopy);\n\n    // illegal move\n    if (move === null) return false;\n\n    // store timeout so it can be cleared on undo/reset so computer doesn't execute move\n    const newTimeout = setTimeout(makeRandomMove, 2000);\n    setCurrentTimeout(newTimeout);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex justify-center bg-slate-700\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChessboardWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"chessBoard\",\n        position: \"r1b1k1nr/p2p1pNp/n2B4/1p1NP2P/6P1/3P1Q2/P1P1K3/q5b1\",\n        onPieceDrop: onDrop,\n        arePremovesAllowed: true,\n        boardWidth: _window.height,\n        customBoardStyle: {\n          borderRadius: \"4px\",\n          boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\"\n        },\n        customDarkSquareStyle: {\n          backgroundColor: \"#779952\"\n        },\n        customLightSquareStyle: {\n          backgroundColor: \"#edeed1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PnJOMTJOxe2nmAxrkMuGshTdpU8=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Chessboard","Chess","useWindowDimensions","App","_window","game","setGame","currentTimeout","setCurrentTimeout","chessboardRef","safeGameMutate","modify","g","update","makeRandomMove","possibleMoves","moves","game_over","in_draw","length","randomIndex","Math","floor","random","move","onDrop","sourceSquare","targetSquare","gameCopy","Object","console","log","from","to","promotion","newTimeout","setTimeout","height","borderRadius","boxShadow","backgroundColor"],"sources":["/home/jon/dev/shallow_blue/test/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\n//import { Chess } from './logic/Chess'\nimport { Chess } from 'chess.js';\nimport useWindowDimensions from './util/useWindowDimensions';\n\nfunction App() {\n  const _window = useWindowDimensions();\n\n  const [game, setGame] = useState(new Chess());\n  const [currentTimeout, setCurrentTimeout] = useState();\n  const chessboardRef = useRef(null);\n\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n  }\n\n  function makeRandomMove() {\n    const possibleMoves = game.moves();\n\n    // exit if the game is over\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return;\n\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    safeGameMutate((game) => {\n      game.move(possibleMoves[randomIndex]);\n    });\n  }\n\n  function onDrop(sourceSquare, targetSquare) {\n    const gameCopy = new Object( ...game );\n    console.log(gameCopy)\n    const move = gameCopy.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\", // always promote to a queen for example simplicity\n    });\n    setGame(gameCopy);\n\n    // illegal move\n    if (move === null) return false;\n\n    // store timeout so it can be cleared on undo/reset so computer doesn't execute move\n    const newTimeout = setTimeout(makeRandomMove, 2000);\n    setCurrentTimeout(newTimeout);\n    return true;\n  }\n  return (\n    <div className='App flex justify-center bg-slate-700'>\n      <div className='ChessboardWrapper'>\n        <Chessboard\n          id='chessBoard'\n          position={\"r1b1k1nr/p2p1pNp/n2B4/1p1NP2P/6P1/3P1Q2/P1P1K3/q5b1\"}\n          onPieceDrop={onDrop}\n          arePremovesAllowed={true}\n          boardWidth={_window.height}\n          customBoardStyle={{\n            borderRadius: \"4px\",\n            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\",\n          }}\n          customDarkSquareStyle={{ backgroundColor: \"#779952\" }}\n          customLightSquareStyle={{ backgroundColor: \"#edeed1\" }}\n          \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,mBAAmB,MAAM,4BAA4B;AAAC;AAE7D,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,OAAO,GAAGF,mBAAmB,EAAE;EAErC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAIG,KAAK,EAAE,CAAC;EAC7C,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,EAAE;EACtD,MAAMW,aAAa,GAAGV,MAAM,CAAC,IAAI,CAAC;EAElC,SAASW,cAAc,CAACC,MAAM,EAAE;IAC9BL,OAAO,CAAEM,CAAC,IAAK;MACb,MAAMC,MAAM,GAAG;QAAE,GAAGD;MAAE,CAAC;MACvBD,MAAM,CAACE,MAAM,CAAC;MACd,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEA,SAASC,cAAc,GAAG;IACxB,MAAMC,aAAa,GAAGV,IAAI,CAACW,KAAK,EAAE;;IAElC;IACA,IAAIX,IAAI,CAACY,SAAS,EAAE,IAAIZ,IAAI,CAACa,OAAO,EAAE,IAAIH,aAAa,CAACI,MAAM,KAAK,CAAC,EAAE;IAEtE,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGR,aAAa,CAACI,MAAM,CAAC;IACpET,cAAc,CAAEL,IAAI,IAAK;MACvBA,IAAI,CAACmB,IAAI,CAACT,aAAa,CAACK,WAAW,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;EAEA,SAASK,MAAM,CAACC,YAAY,EAAEC,YAAY,EAAE;IAC1C,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAAE,GAAGxB,IAAI,CAAE;IACtCyB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB,MAAMJ,IAAI,GAAGI,QAAQ,CAACJ,IAAI,CAAC;MACzBQ,IAAI,EAAEN,YAAY;MAClBO,EAAE,EAAEN,YAAY;MAChBO,SAAS,EAAE,GAAG,CAAE;IAClB,CAAC,CAAC;;IACF5B,OAAO,CAACsB,QAAQ,CAAC;;IAEjB;IACA,IAAIJ,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;;IAE/B;IACA,MAAMW,UAAU,GAAGC,UAAU,CAACtB,cAAc,EAAE,IAAI,CAAC;IACnDN,iBAAiB,CAAC2B,UAAU,CAAC;IAC7B,OAAO,IAAI;EACb;EACA,oBACE;IAAK,SAAS,EAAC,sCAAsC;IAAA,uBACnD;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC,QAAC,UAAU;QACT,EAAE,EAAC,YAAY;QACf,QAAQ,EAAE,qDAAsD;QAChE,WAAW,EAAEV,MAAO;QACpB,kBAAkB,EAAE,IAAK;QACzB,UAAU,EAAErB,OAAO,CAACiC,MAAO;QAC3B,gBAAgB,EAAE;UAChBC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACb,CAAE;QACF,qBAAqB,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QACtD,sBAAsB,EAAE;UAAEA,eAAe,EAAE;QAAU;MAAE;QAAA;QAAA;QAAA;MAAA;IAEvD;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAjEQrC,GAAG;EAAA,QACMD,mBAAmB;AAAA;AAAA,KAD5BC,GAAG;AAmEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}