{"ast":null,"code":"var _jsxFileName = \"/home/jon/dev/shallow_blue/test/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport SideMenu from './components/SideMenu';\nimport useWindowDimensions from './util/useWindowDimensions';\nimport fetchMove from './util/fetchMove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const _window = useWindowDimensions();\n  const [game, setGame] = useState(new Chess());\n  const [currentTimeout, setCurrentTimeout] = useState();\n  const chessboardRef = useRef(null);\n  const [position, setPosition] = useState();\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = Object.assign(Object.create(Object.getPrototypeOf(g)), g);\n      modify(update);\n      return update;\n    });\n  }\n  async function oppTurn() {\n    console.log(game.fen());\n    await fetchMove(game.fen()).then(move => {\n      safeGameMutate(g => g.move(move));\n    });\n  }\n  function onDrop(src, dst) {\n    // gameCopy is deep copy that maintains prototype\n    let gameCopy = Object.assign(Object.create(Object.getPrototypeOf(game)), game);\n    try {\n      gameCopy.move({\n        from: src,\n        to: dst,\n        promotion: \"q\"\n      });\n    } catch {\n      return false;\n    }\n    setGame(gameCopy);\n    const newTimeout = setTimeout(oppTurn, 400);\n    setCurrentTimeout(newTimeout);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex justify-center bg-slate-700 py-20\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChessboardWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"chessBoard\",\n        position: game.fen(),\n        getPositionObject: setPosition,\n        onPieceDrop: onDrop,\n        arePremovesAllowed: true,\n        boardWidth: _window.height - 200,\n        customBoardStyle: {\n          borderRadius: \"4px\",\n          boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\"\n        },\n        customDarkSquareStyle: {\n          backgroundColor: \"#779952\"\n        },\n        customLightSquareStyle: {\n          backgroundColor: \"#edeed1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideMenu, {\n      safeGameMutate: safeGameMutate,\n      chessboardRef: chessboardRef,\n      currentTimeout: currentTimeout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GJulZu4F0AadIpPS0j3w+MRX9Og=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Chessboard","Chess","SideMenu","useWindowDimensions","fetchMove","App","_window","game","setGame","currentTimeout","setCurrentTimeout","chessboardRef","position","setPosition","safeGameMutate","modify","g","update","Object","assign","create","getPrototypeOf","oppTurn","console","log","fen","then","move","onDrop","src","dst","gameCopy","from","to","promotion","newTimeout","setTimeout","height","borderRadius","boxShadow","backgroundColor"],"sources":["/home/jon/dev/shallow_blue/test/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js'\nimport SideMenu from './components/SideMenu';\nimport useWindowDimensions from './util/useWindowDimensions';\nimport fetchMove from './util/fetchMove';\n\nfunction App() {\n  const _window = useWindowDimensions();\n\n  const [game, setGame] = useState(new Chess());\n  const [currentTimeout, setCurrentTimeout] = useState();\n  const chessboardRef = useRef(null);\n\n  const [position, setPosition] = useState();\n\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = Object.assign(Object.create(Object.getPrototypeOf(g)), g);\n      modify(update);\n      return update;\n    });\n  }\n\n  async function oppTurn() {\n    console.log(game.fen())\n    await fetchMove(game.fen()).then((move) => {\n      safeGameMutate(g => g.move(move))\n    });\n  }\n\n  function onDrop(src, dst) {\n    // gameCopy is deep copy that maintains prototype\n    let gameCopy = Object.assign(Object.create(Object.getPrototypeOf(game)), game);\n    try {\n      gameCopy.move({\n        from: src,\n        to: dst,\n        promotion: \"q\",\n      });\n    } catch {\n      return false;\n    }\n    setGame(gameCopy)\n    const newTimeout = setTimeout(oppTurn, 400);\n    setCurrentTimeout(newTimeout);\n\n    return true;\n  }\n\n  return (\n    <div className='App flex justify-center bg-slate-700 py-20'>\n      <div className='ChessboardWrapper'>\n        <Chessboard\n          id='chessBoard'\n          position={game.fen()}\n          getPositionObject={setPosition}\n          onPieceDrop={onDrop}\n          arePremovesAllowed={true}\n          boardWidth={_window.height - 200}\n          customBoardStyle={{\n            borderRadius: \"4px\",\n            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\",\n          }}\n          customDarkSquareStyle={{ backgroundColor: \"#779952\" }}\n          customLightSquareStyle={{ backgroundColor: \"#edeed1\" }}\n          \n        />\n      </div>\n      <SideMenu\n        safeGameMutate={safeGameMutate}\n        chessboardRef={chessboardRef}\n        currentTimeout={currentTimeout}\n      />\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,mBAAmB,MAAM,4BAA4B;AAC5D,OAAOC,SAAS,MAAM,kBAAkB;AAAC;AAEzC,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,OAAO,GAAGH,mBAAmB,EAAE;EAErC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAIG,KAAK,EAAE,CAAC;EAC7C,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,EAAE;EACtD,MAAMa,aAAa,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAElC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,EAAE;EAE1C,SAASgB,cAAc,CAACC,MAAM,EAAE;IAC9BP,OAAO,CAAEQ,CAAC,IAAK;MACb,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAACL,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC;MACxED,MAAM,CAACE,MAAM,CAAC;MACd,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EAEA,eAAeK,OAAO,GAAG;IACvBC,OAAO,CAACC,GAAG,CAACjB,IAAI,CAACkB,GAAG,EAAE,CAAC;IACvB,MAAMrB,SAAS,CAACG,IAAI,CAACkB,GAAG,EAAE,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;MACzCb,cAAc,CAACE,CAAC,IAAIA,CAAC,CAACW,IAAI,CAACA,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ;EAEA,SAASC,MAAM,CAACC,GAAG,EAAEC,GAAG,EAAE;IACxB;IACA,IAAIC,QAAQ,GAAGb,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAACF,MAAM,CAACG,cAAc,CAACd,IAAI,CAAC,CAAC,EAAEA,IAAI,CAAC;IAC9E,IAAI;MACFwB,QAAQ,CAACJ,IAAI,CAAC;QACZK,IAAI,EAAEH,GAAG;QACTI,EAAE,EAAEH,GAAG;QACPI,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,MAAM;MACN,OAAO,KAAK;IACd;IACA1B,OAAO,CAACuB,QAAQ,CAAC;IACjB,MAAMI,UAAU,GAAGC,UAAU,CAACd,OAAO,EAAE,GAAG,CAAC;IAC3CZ,iBAAiB,CAACyB,UAAU,CAAC;IAE7B,OAAO,IAAI;EACb;EAEA,oBACE;IAAK,SAAS,EAAC,4CAA4C;IAAA,wBACzD;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC,QAAC,UAAU;QACT,EAAE,EAAC,YAAY;QACf,QAAQ,EAAE5B,IAAI,CAACkB,GAAG,EAAG;QACrB,iBAAiB,EAAEZ,WAAY;QAC/B,WAAW,EAAEe,MAAO;QACpB,kBAAkB,EAAE,IAAK;QACzB,UAAU,EAAEtB,OAAO,CAAC+B,MAAM,GAAG,GAAI;QACjC,gBAAgB,EAAE;UAChBC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACb,CAAE;QACF,qBAAqB,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QACtD,sBAAsB,EAAE;UAAEA,eAAe,EAAE;QAAU;MAAE;QAAA;QAAA;QAAA;MAAA;IAEvD;MAAA;MAAA;MAAA;IAAA,QACE,eACN,QAAC,QAAQ;MACP,cAAc,EAAE1B,cAAe;MAC/B,aAAa,EAAEH,aAAc;MAC7B,cAAc,EAAEF;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEZ;AAAC,GArEQJ,GAAG;EAAA,QACMF,mBAAmB;AAAA;AAAA,KAD5BE,GAAG;AAuEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}