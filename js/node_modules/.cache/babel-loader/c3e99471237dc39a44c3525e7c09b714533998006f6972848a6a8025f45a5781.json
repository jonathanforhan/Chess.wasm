{"ast":null,"code":"let wasm;\nconst cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\ncachedTextDecoder.decode();\nlet cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nlet WASM_VECTOR_LEN = 0;\nconst cachedTextEncoder = new TextEncoder('utf-8');\nconst encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n  let len = arg.length;\n  let ptr = malloc(len);\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3);\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n/**\n*/\nexport class Chess {\n  static __wrap(ptr) {\n    const obj = Object.create(Chess.prototype);\n    obj.ptr = ptr;\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.ptr;\n    this.ptr = 0;\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_chess_free(ptr);\n  }\n  /**\n  */\n  constructor() {\n    const ret = wasm.chess_new();\n    return Chess.__wrap(ret);\n  }\n  /**\n  * @param {string} fen\n  */\n  set_fen(fen) {\n    const ptr0 = passStringToWasm0(fen, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.chess_set_fen(this.ptr, ptr0, len0);\n  }\n  /**\n  */\n  get_fen() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_chess_free(ptr);\n  }\n}\nasync function load(module, imports) {\n  if (typeof Response === 'function' && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get('Content-Type') != 'application/wasm') {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return {\n        instance,\n        module\n      };\n    } else {\n      return instance;\n    }\n  }\n}\nfunction getImports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  return imports;\n}\nfunction initMemory(imports, maybe_memory) {}\nfunction finalizeInit(instance, module) {\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n  cachedUint8Memory0 = null;\n  return wasm;\n}\nfunction initSync(module) {\n  const imports = getImports();\n  initMemory(imports);\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n  const instance = new WebAssembly.Instance(module, imports);\n  return finalizeInit(instance, module);\n}\nasync function init(input) {\n  if (typeof input === 'undefined') {\n    input = new URL('chess_wasm_bg.wasm', import.meta.url);\n  }\n  const imports = getImports();\n  if (typeof input === 'string' || typeof Request === 'function' && input instanceof Request || typeof URL === 'function' && input instanceof URL) {\n    input = fetch(input);\n  }\n  initMemory(imports);\n  const {\n    instance,\n    module\n  } = await load(await input, imports);\n  return finalizeInit(instance, module);\n}\nexport { initSync };\nexport default init;","map":{"version":3,"names":["wasm","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","getUint8Memory0","byteLength","Uint8Array","memory","buffer","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","passStringToWasm0","malloc","realloc","undefined","mem","offset","code","charCodeAt","slice","ret","Chess","__wrap","obj","Object","create","prototype","__destroy_into_raw","free","__wbg_chess_free","constructor","chess_new","set_fen","fen","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","chess_set_fen","get_fen","load","module","imports","Response","WebAssembly","instantiateStreaming","e","headers","get","console","warn","bytes","arrayBuffer","instantiate","instance","Instance","getImports","wbg","__wbindgen_throw","arg0","arg1","Error","initMemory","maybe_memory","finalizeInit","exports","init","__wbindgen_wasm_module","initSync","Module","input","URL","import","meta","url","Request","fetch"],"sources":["/home/jon/dev/chess-wasm/js/src/engine/chess_wasm.js"],"sourcesContent":["let wasm;\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n*/\nexport class Chess {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Chess.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_chess_free(ptr);\n    }\n    /**\n    */\n    constructor() {\n        const ret = wasm.chess_new();\n        return Chess.__wrap(ret);\n    }\n    /**\n    * @param {string} fen\n    */\n    set_fen(fen) {\n        const ptr0 = passStringToWasm0(fen, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.chess_set_fen(this.ptr, ptr0, len0);\n    }\n    /**\n    */\n    get_fen() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_chess_free(ptr);\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('chess_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}