{"ast":null,"code":"var _jsxFileName = \"/home/jon/dev/shallow_blue/test/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\n//import { Chess } from './logic/Chess'\nimport { Chess } from 'chess.js';\nimport useWindowDimensions from './util/useWindowDimensions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const _window = useWindowDimensions();\n  const [game, setGame] = useState(new Chess());\n\n  // perform modify function on game state\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = {\n        ...g\n      };\n      modify(update);\n      return update;\n    });\n  } // make computer move\n  function makeRandomMove() {\n    const possibleMoves = game.moves(); // exit if the game is over\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // select random move\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length); // play random move\n    safeGameMutate(game => {\n      game.move(possibleMoves[randomIndex]);\n    });\n  } // perform action when piece dropped by user\n  function onDrop(sourceSquare, targetSquare) {\n    // attempt move\n    let move = null;\n    safeGameMutate(game => {\n      move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n    });\n\n    // illegal move made\n    if (move === null) return false; // valid move made, make computer move\n    setTimeout(makeRandomMove, 200);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App flex justify-center bg-slate-700\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChessboardWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        id: \"chessBoard\",\n        position: \"r1b1k1nr/p2p1pNp/n2B4/1p1NP2P/6P1/3P1Q2/P1P1K3/q5b1\",\n        onPieceDrop: onDrop,\n        arePremovesAllowed: true,\n        boardWidth: _window.height,\n        customBoardStyle: {\n          borderRadius: \"4px\",\n          boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\"\n        },\n        customDarkSquareStyle: {\n          backgroundColor: \"#779952\"\n        },\n        customLightSquareStyle: {\n          backgroundColor: \"#edeed1\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nfec/DZBj0Scw5YEd1j1Bxi45v8=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Chessboard","Chess","useWindowDimensions","App","_window","game","setGame","safeGameMutate","modify","g","update","makeRandomMove","possibleMoves","moves","game_over","in_draw","length","randomIndex","Math","floor","random","move","onDrop","sourceSquare","targetSquare","from","to","promotion","setTimeout","height","borderRadius","boxShadow","backgroundColor"],"sources":["/home/jon/dev/shallow_blue/test/client/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useRef } from 'react';\nimport { Chessboard } from 'react-chessboard';\n//import { Chess } from './logic/Chess'\nimport { Chess } from 'chess.js';\nimport useWindowDimensions from './util/useWindowDimensions';\n\nfunction App() {\n  const _window = useWindowDimensions();\n\n  const [game, setGame] = useState(new Chess());\n  \n  // perform modify function on game state\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n  }  // make computer move\n  function makeRandomMove() {\n    const possibleMoves = game.moves();    // exit if the game is over\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return;    // select random move\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);    // play random move\n    safeGameMutate((game) => {\n      game.move(possibleMoves[randomIndex]);\n    });\n  }  // perform action when piece dropped by user\n  function onDrop(sourceSquare, targetSquare) {\n    // attempt move\n    let move = null;\n    safeGameMutate((game) => {\n      move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n    });\n    \n    // illegal move made\n    if (move === null) return false;    // valid move made, make computer move\n    setTimeout(makeRandomMove, 200);\n    return true;\n  }\n\n  return (\n    <div className='App flex justify-center bg-slate-700'>\n      <div className='ChessboardWrapper'>\n        <Chessboard\n          id='chessBoard'\n          position={\"r1b1k1nr/p2p1pNp/n2B4/1p1NP2P/6P1/3P1Q2/P1P1K3/q5b1\"}\n          onPieceDrop={onDrop}\n          arePremovesAllowed={true}\n          boardWidth={_window.height}\n          customBoardStyle={{\n            borderRadius: \"4px\",\n            boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.5)\",\n          }}\n          customDarkSquareStyle={{ backgroundColor: \"#779952\" }}\n          customLightSquareStyle={{ backgroundColor: \"#edeed1\" }}\n          \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C;AACA,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,mBAAmB,MAAM,4BAA4B;AAAC;AAE7D,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,OAAO,GAAGF,mBAAmB,EAAE;EAErC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAIG,KAAK,EAAE,CAAC;;EAE7C;EACA,SAASM,cAAc,CAACC,MAAM,EAAE;IAC9BF,OAAO,CAAEG,CAAC,IAAK;MACb,MAAMC,MAAM,GAAG;QAAE,GAAGD;MAAE,CAAC;MACvBD,MAAM,CAACE,MAAM,CAAC;MACd,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ,CAAC,CAAE;EACH,SAASC,cAAc,GAAG;IACxB,MAAMC,aAAa,GAAGP,IAAI,CAACQ,KAAK,EAAE,CAAC,CAAI;IACvC,IAAIR,IAAI,CAACS,SAAS,EAAE,IAAIT,IAAI,CAACU,OAAO,EAAE,IAAIH,aAAa,CAACI,MAAM,KAAK,CAAC,EAAE,OAAO,CAAI;IACjF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGR,aAAa,CAACI,MAAM,CAAC,CAAC,CAAI;IACzET,cAAc,CAAEF,IAAI,IAAK;MACvBA,IAAI,CAACgB,IAAI,CAACT,aAAa,CAACK,WAAW,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAE;EACH,SAASK,MAAM,CAACC,YAAY,EAAEC,YAAY,EAAE;IAC1C;IACA,IAAIH,IAAI,GAAG,IAAI;IACfd,cAAc,CAAEF,IAAI,IAAK;MACvBgB,IAAI,GAAGhB,IAAI,CAACgB,IAAI,CAAC;QACfI,IAAI,EAAEF,YAAY;QAClBG,EAAE,EAAEF,YAAY;QAChBG,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAIN,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,CAAC,CAAI;IACpCO,UAAU,CAACjB,cAAc,EAAE,GAAG,CAAC;IAC/B,OAAO,IAAI;EACb;EAEA,oBACE;IAAK,SAAS,EAAC,sCAAsC;IAAA,uBACnD;MAAK,SAAS,EAAC,mBAAmB;MAAA,uBAChC,QAAC,UAAU;QACT,EAAE,EAAC,YAAY;QACf,QAAQ,EAAE,qDAAsD;QAChE,WAAW,EAAEW,MAAO;QACpB,kBAAkB,EAAE,IAAK;QACzB,UAAU,EAAElB,OAAO,CAACyB,MAAO;QAC3B,gBAAgB,EAAE;UAChBC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACb,CAAE;QACF,qBAAqB,EAAE;UAAEC,eAAe,EAAE;QAAU,CAAE;QACtD,sBAAsB,EAAE;UAAEA,eAAe,EAAE;QAAU;MAAE;QAAA;QAAA;QAAA;MAAA;IAEvD;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1DQ7B,GAAG;EAAA,QACMD,mBAAmB;AAAA;AAAA,KAD5BC,GAAG;AA4DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}